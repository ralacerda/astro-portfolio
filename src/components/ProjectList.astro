---
import ProjectCard from "@/components/ProjectCard.astro";
import type { Tech } from "@/composables/getIcon";

import contrasteScreenshot from "@/assets/images/project-contraste.png";
import oscarScreenshot from "@/assets/images/project-oscar.png";
import coloquioScreenshot from "@/assets/images/project-coloquio.png";

interface Props {
  short?: boolean;
}

export type Project = {
  title: string;
  weight: number;
  longContent: string;
  shortContent: string;
  image: ImageMetadata;
  tech: Tech[];
  slug: string;
};

const { short = false } = Astro.props;

const projectScreenshot: Record<string, ImageMetadata> = {
  contraste: contrasteScreenshot,
  oscar: oscarScreenshot,
  coloquio: coloquioScreenshot,
};

const projectList: Project[] = (await Astro.glob("../data/projects/*.md")).map(
  (project) => {
    const content = project.compiledContent();
    const [shortContent, longContent] = content.split("<!--read more-->");

    return {
      title: project.frontmatter.title,
      slug: project.frontmatter.slug,
      weight: project.frontmatter.weight,
      shortContent,
      longContent,
      image: projectScreenshot[project.frontmatter.slug],
      tech: project.frontmatter.tech,
    };
  }
);
---

{
  projectList
    .sort((a, b) => b.weight - a.weight)
    .slice(0, short ? 2 : Infinity)
    .map((project) => {
      return <ProjectCard project={project} />;
    })
}
