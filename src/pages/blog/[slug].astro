---
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection(
    "articles"
  );
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const localDateStringOptions = {
  year: "numeric",
  month: "long",
  day: "numeric",
};
---

<Layout pageName="">
  <article class="blog-post">
    <div class="post-metadata">
      <h1>{entry.data.title}</h1>
      <time datetime={entry.data.publishDate?.toISOString()}
        >{entry.data.publishDate?.toLocaleDateString("pt-BR", localDateStringOptions)}</time
      >
    </div>
    <Content />
  </article>
</Layout>

<style lang="scss">
  h1 {
    margin-bottom: var(--space-xs);
    font-size: var(--step-3);
    max-width: 40ch;
    line-height: 1.1;
  }

  time {
    font-size: var(--step-1);
  }

  .post-metadata {
    margin-bottom: var(--space-m);
  }

  .blog-post {
    @include card;

    & > :global(* + *) {
      margin-top: var(--space-s);
    }

    & > :global(h2) {
      margin-top: var(--space-m);
      font-size: var(--step-2);
    }

    & :global(.footnotes :where(h2, li)) {
      margin-bottom: var(--space-s);
    }

    & :global(:where([data-footnote-ref], [data-footnote-backref])) {
      text-decoration: none;

      &:hover {
        color: var(--danger);
      }
    }

    & :global(ol, ul) {
      padding-left: 0;
      list-style-position: inside;
    }

    & :global(:where(ol, ul) li p) {
      display: inline;
    }

    & :global(p code) {
      background-color: var(--bg);
      color: var(--fg);
      display: inline-block;
      padding-inline: 0.2rem;
    }

    & :global(.astro-code) {
      padding: 1rem;
      max-width: 80ch;
      border-radius: 0.5rem;
      margin-block: var(--space-l);
    }

    & :global(blockquote p) {
      max-width: 50ch;
      font-size: var(--step-1);
      margin-block: var(--space-m);
      color: var(--gray);
      font-style: italic;

      &::before {
        content: "“";
      }
      &::after {
        content: "”";
      }
    }
  }
</style>
